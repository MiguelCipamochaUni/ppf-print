generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL") // usa la de pooling (pgbouncer)
  directUrl = env("DIRECT_URL") // usa la conexi√≥n directa
}

model User {
  id           String   @id @default(uuid())
  name         String
  email        String   @unique
  passwordHash String   @map("password_hash")
  createdAt    DateTime @default(now()) @map("created_at")
  role         String   @default("user")

  orders Order[]
}

model Product {
  id          String   @id @default(uuid())
  title       String
  description String
  price       Decimal  @db.Decimal(10, 2)
  slug        String   @unique
  mainImage   String   @map("main_image")
  images      Json
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  orderItems OrderItem[]
}

model Order {
  id          String      @id @default(uuid())
  userId      String      @map("user_id")
  totalAmount Decimal     @map("total_amount") @db.Decimal(10, 2)
  status      OrderStatus @default(pending)
  createdAt   DateTime    @default(now()) @map("created_at")

  user  User        @relation(fields: [userId], references: [id])
  items OrderItem[]
}

model OrderItem {
  id              String  @id @default(uuid())
  orderId         String  @map("order_id")
  productId       String  @map("product_id")
  quantity        Int
  priceAtPurchase Decimal @map("price_at_purchase") @db.Decimal(10, 2)

  order   Order   @relation(fields: [orderId], references: [id])
  product Product @relation(fields: [productId], references: [id])
}

enum OrderStatus {
  pending
  paid
  cancelled
}
